@model NewWorld.Models.HomeViewModels
@{
    ViewBag.Title = "Lista Gier";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Model.YourGames.Count == 0)
{
    <h2>Nie masz rozpoczętych gier</h2>
}
else
{

    <h2>Lista Gier</h2>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.YourGames[0].Name)
            </th>
            <th>
                Liczba graczy
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.YourGames)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @item.NumberOfPlayers() <text> / </text> @item.MaxPlayers
                </td>
                <td>
                    @Html.ActionLink("Wycofaj się", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
}



<h2>Dodaj nową grę.</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewGame.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewGame.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewGame.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @if(Model.NameUsed.GetValueOrDefault())
        {
            <div class="text-danger">
                Nazwa jest już zajęta
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.NewGame.MaxPlayers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewGame.MaxPlayers, new { htmlAttributes = new { @class = "form-control", min=2, max=4, step=1 } })
                @Html.ValidationMessageFor(model => model.NewGame.MaxPlayers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

